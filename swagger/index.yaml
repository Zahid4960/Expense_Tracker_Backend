swagger: "2.0"

info:
  title: Expense Tracker API
  description: Expense tracker backend is a backend service where any individual can join into the system and very easily with minimum effort can manage, monitor his day to life expenses.

  version: 1.0.0

schemes:
  - http
  - https

produces:
  - application/json

consumes:
  - application/json

basePath: "/api"

securityDefinitions:
  client_key:
    type: apiKey
    name: X-Client-key
    in: header

  api_token:
    type: apiKey
    name: Authorization
    in: header

tags:
  - name: User
    description: API's for user module.

#############################################################################################################
#                                      # User #
#############################################################################################################
paths:
  /:
    get:
      summary: "Expense tracker test API"
      description: "Test API for expense tracker"
      tags:
        - User
      consumes:
        - application/json
      responses:
        "200":
          description: "Response after successful api call into the system"
          schema:
            $ref: "#/definitions/Success"

  /user/registration:
    post:
      summary: "User registration"
      description: "User registration into the system with email & password"
      tags:
        - User
      consumes:
        - application/json
      parameters:
        - name: item
          in: body
          required: true
          description: "Set request parameter to registration into the system"
          schema:
            $ref: "#/definitions/RegistrationObject"
      responses:
        "200":
          description: "Response after successful registration into the system"
          schema:
            $ref: "#/definitions/Success"

  /user/login:
    post:
      summary: "User login"
      description: "User log into the system with email & password"
      tags:
        - User
      consumes:
        - application/json
      security:
      # - client_key: []
      # - api_token: []
      parameters:
        - name: item
          in: body
          required: true
          description: "Set request parameter to log into the system"
          schema:
            $ref: "#/definitions/LoginObject"
      responses:
        "200":
          description: "success"
          schema:
            $ref: "#/definitions/LoginResponse"

  /user/verify-via-otp:
    post:
      summary: "User verification"
      description: "User verification via otp"
      tags:
        - User
      consumes:
        - application/json
      security:
        - api_token: [ ]
      parameters:
        - name: item
          in: body
          required: true
          description: "Set request parameter to user verify"
          schema:
            $ref: "#/definitions/UserVerificationObject"
      responses:
        "200":
          description: "success"
          schema:
            $ref: "#/definitions/Success"

  /user/forgot-password:
    post:
      summary: "User forgot password"
      description: "User will change password due to forgot password"
      tags:
        - User
      consumes:
        - application/json
      security:
        - api_token: [ ]
      parameters:
        - name: item
          in: body
          required: true
          description: "Set request parameter to update password"
          schema:
            $ref: "#/definitions/ForgotPasswordObject"
      responses:
        "200":
          description: "Response after successful password update due to forgot password"
          schema:
            $ref: "#/definitions/Success"

  /user/change-password:
    post:
      summary: "User change password"
      description: "User will change password"
      tags:
        - User
      consumes:
        - application/json
      security:
        - api_token: [ ]
      parameters:
        - name: item
          in: body
          required: true
          description: "Set request parameter to change password"
          schema:
            $ref: "#/definitions/PasswordChangeObject"
      responses:
        "200":
          description: "Response after successful password change"
          schema:
            $ref: "#/definitions/Success"

  /user/update-profile/{userId}:
    patch:
      summary: "User profile update"
      description: "User will update his profile"
      tags:
        - User
      consumes:
        - application/json
      security:
        - api_token: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          type: string
        - name: item
          in: body
          required: true
          description: "Set request parameter to update user profile"
          schema:
            $ref: "#/definitions/UserProfileUpdateObject"
      responses:
        "200":
          description: "Response after successful user profile update"
          schema:
            $ref: "#/definitions/Success"

  /user/{userId}:
    get:
      summary: "Get user information"
      description: "Get any specific user information by user id"
      tags:
        - User
      consumes:
        - application/json
      security:
        - api_token: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: "Response containing user information"
          schema:
            $ref: "#/definitions/UserInformationResponse"

    delete:
      summary: "Deactivate user account"
      description: "Deactivate any specific user account by user id"
      tags:
        - User
      consumes:
        - application/json
      security:
        - api_token: [ ]
      parameters:
        - name: userId
          in: path
          required: true
          type: string
      responses:
        "200":
          description: "Response after successfully deactivating user account"
          schema:
            $ref: "#/definitions/Success"


##############################################################################################################                                                                                                         #
#                                     # Definitions #                                                                                                                                                                                                      #
##############################################################################################################
definitions:
  Success:
    type: object
    description: "Success"
    properties:
      statusCode:
        type: integer
        default: 200
      status:
        type: string
        default: "success"
      message:
        type: string
        default: "Success message"

  RegistrationObject:
    type: object
    description: "Login Object"
    required:
      - email
      - password
    properties:
      email:
        type: string
        default: "example@example.com"
      password:
        type: string
        default: "password"

  LoginObject:
    type: object
    description: "Login Object"
    required:
      - email
      - password
      - isRemember
    properties:
      email:
        type: string
        default: "example@example.com"
      password:
        type: string
        default: "password"
      isRemember:
        type: boolean
        default: false

  LoginResponse:
    type: object
    description: "Login Response"
    properties:
      id:
        type: string
        default: "652fcc372b2f01d93d472ccb"
      firstName:
        type: string
        default: "firstName"
      email:
        type: string
        default: "example@example.com"
      isRemember:
        type: boolean
        default: false
      token:
        type: string
        default: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.............."
      tokenExpiresAt:
        type: string
        default: "2023-10-18 07:17:01 PM"

  UserVerificationObject:
    type: object
    description: "User Verification Object"
    required:
      - otp
    properties:
      otp:
        type: string
        default: "1234"

  ForgotPasswordObject:
    type: object
    description: "Forgot Password Object"
    required:
      - newPassword
    properties:
      newPassword:
        type: string
        default: "password"

  PasswordChangeObject:
    type: object
    description: "Password Change Object"
    required:
      - oldPassword
      - newPassword
    properties:
      oldPassword:
        type: string
        default: "oldPassword"
      newPassword:
        type: string
        default: "newPassword"

  UserProfileUpdateObject:
    type: object
    description: User Profile Update Object
    properties:
      firstName:
        type: string
        default: "first name"
      lastName:
        type: string
        default: "last name"
      userName:
        type: string
        default: "user name"
      dob:
        type: string
        default: "14-02-1997"
      gender:
        type: string
        default: "Male"

  UserInformationResponse:
    type: object
    description: User Information Response
    properties:
      firstName:
        type: string
        default: "first name"
      lastName:
        type: string
        default: "last name"
      userName:
        type: string
        default: "user name"
      dob:
        type: string
        default: "14-02-1997"
      gender:
        type: string
        default: "Male"
      email:
        type: string
        default: "example@example.com"
      addresses:
        type: array
        items:
          $ref: "#/definitions/AddressResponse"
#      expenseCategories:
#        type: array
#        items:
#          $ref: "#/definitions/ExpenseCategoriesResponse"

  AddressResponse:
    type: object
    description: "Address Response"
    properties:
      address:
        type: string
        default: "address"
      country:
        type: string
        default: "country"
      city:
        type: string
        default: "city"
      state:
        type: string
        default: "state"
      postalCode:
        type: string
        default: "5840"

  ExpenseCategoriesResponse:
    type: object
    description: "Expense Categories Response"
    properties:
      categoryName:
        type: string
        default: "category name"
      description:
        type: string
        default: "description"
